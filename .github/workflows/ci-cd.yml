name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build.outputs.tag }}
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Build Image
        id: build
        run: |
          IMAGE_TAG="ci-image:${{ github.sha }}"
          docker build -t $IMAGE_TAG .
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  sonarcloud:
    needs: build-image
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: SonarCloud Scan
        run: |
          docker run --rm ${{ needs.build-image.outputs.image-tag }} \
            sonar-scanner -Dsonar.login=$SONAR_TOKEN

  npm-audit:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: NPM audit
        run: |
          docker run --rm ${{ needs.build-image.outputs.image-tag }} \
            npm audit --audit-level=moderate

  deploy-vercel:
    needs: build-image
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN:      ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Vercel deploy
        run: |
          docker run --rm ${{ needs.build-image.outputs.image-tag }} \
            npx vercel --token $VERCEL_TOKEN \
                       --org-id $VERCEL_ORG_ID \
                       --project-id $VERCEL_PROJECT_ID \
                       --prod
