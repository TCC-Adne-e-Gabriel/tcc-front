name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-remote: ${{ steps.push.outputs.remote }}
    steps:
      - uses: actions/checkout@v4

      - id: build
        run: |
          IMAGE_TAG=tcc-front:${{ github.sha }}
          docker build --target ci -t $IMAGE_TAG .
          echo "local=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: push
        run: |
          REMOTE=${{ secrets.DOCKERHUB_USERNAME }}/tcc-front:${{ github.sha }}
          docker tag ${{ steps.build.outputs.local }} $REMOTE
          docker push $REMOTE
          echo "remote=$REMOTE" >> $GITHUB_OUTPUT

  check-and-deploy:
    name: Analyze, Audit & Deploy
    needs: build-and-push
    runs-on: ubuntu-latest
    container: ${{ needs.build-and-push.outputs.image }}
    env:
      SONAR_TOKEN:       ${{ secrets.SONAR_TOKEN }}
      VERCEL_TOKEN:      ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: SonarCloud Scan
        run: sonar-scanner -Dsonar.login=$SONAR_TOKEN

      - name: NPM Audit
        run: npm audit --audit-level=moderate

      - name: Deploy to Vercel
        run: npx vercel --token $VERCEL_TOKEN \
                       --org-id $VERCEL_ORG_ID \
                       --project-id $VERCEL_PROJECT_ID \
                       --prod